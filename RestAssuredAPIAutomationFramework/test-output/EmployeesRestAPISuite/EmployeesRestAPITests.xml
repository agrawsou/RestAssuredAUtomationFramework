<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Asus" failures="5" tests="15" name="EmployeesRestAPITests" time="18.396" errors="0" timestamp="2022-02-03T01:18:25 IST">
  <testcase classname="com.employeeAPI.testCases.DeleteEmployee" name="@BeforeClass deleteEmployee" time="1.185">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at com.employeeAPI.testCases.DeleteEmployee.deleteEmployee(DeleteEmployee.java:24)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
at groovy.json.JsonLexer$nextToken.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:130)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
... 30 more
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass deleteEmployee -->
  <testcase classname="com.employeeAPI.testCases.DeleteEmployee" name="@AfterClass tearDown" time="-1.64383130531E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="com.employeeAPI.testCases.GetAllEmployees" name="validateResponseBody" time="0.258"/>
  <testcase classname="com.employeeAPI.testCases.GetAllEmployees" name="validateResponseTime" time="0.002"/>
  <testcase classname="com.employeeAPI.testCases.GetAllEmployees" name="validateStatusCode" time="0.004">
    <failure type="java.lang.AssertionError" message="expected [200] but found [429]">
      <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at com.employeeAPI.testCases.GetAllEmployees.validateStatusCode(GetAllEmployees.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- validateStatusCode -->
  <testcase classname="com.employeeAPI.testCases.GetSingleEmployee" name="validateResponseBody" time="0.002"/>
  <testcase classname="com.employeeAPI.testCases.GetSingleEmployee" name="validateResponseTime" time="0.003"/>
  <testcase classname="com.employeeAPI.testCases.GetSingleEmployee" name="validateStatusCode" time="0.002"/>
  <testcase classname="com.employeeAPI.testCases.CreateEmployee" name="validateResponseBody" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.employeeAPI.testCases.CreateEmployee.validateResponseBody(CreateEmployee.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- validateResponseBody -->
  <testcase classname="com.employeeAPI.testCases.CreateEmployee" name="validateResponseTime" time="0.004"/>
  <testcase classname="com.employeeAPI.testCases.CreateEmployee" name="validateStatusCode" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [200] but found [429]">
      <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at com.employeeAPI.testCases.CreateEmployee.validateStatusCode(CreateEmployee.java:58)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- validateStatusCode -->
  <testcase classname="com.employeeAPI.testCases.ModifyEmployee" name="validateResponseBody" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.employeeAPI.testCases.ModifyEmployee.validateResponseBody(ModifyEmployee.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- validateResponseBody -->
  <testcase classname="com.employeeAPI.testCases.ModifyEmployee" name="validateResponseTime" time="0.002"/>
  <testcase classname="com.employeeAPI.testCases.ModifyEmployee" name="validateStatusCode" time="0.003">
    <failure type="java.lang.AssertionError" message="expected [200] but found [429]">
      <![CDATA[java.lang.AssertionError: expected [200] but found [429]
at com.employeeAPI.testCases.ModifyEmployee.validateStatusCode(ModifyEmployee.java:58)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- validateStatusCode -->
  <testcase classname="com.employeeAPI.testCases.DeleteEmployee" name="validateResponseBody" time="0.0">
    <skipped/>
  </testcase> <!-- validateResponseBody -->
  <testcase classname="com.employeeAPI.testCases.DeleteEmployee" name="validateResponseTime" time="0.0">
    <skipped/>
  </testcase> <!-- validateResponseTime -->
  <testcase classname="com.employeeAPI.testCases.DeleteEmployee" name="validateStatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- validateStatusCode -->
</testsuite> <!-- EmployeesRestAPITests -->
